if (!require("caTools")){
install.packages("caTools")
library(MASS)
}
setwd("C:\\Desarrollo\\repos\\Master-BigData-CIFF-2016\\analisis estadístico\\Practica1")
data=read.csv("house_train.csv",stringsAsFactors = FALSE)
str(data)
head(data)
summary(data)
data$date= as.Date(substr(data$date, 0, 8), "%Y%m%d")
if (!require("caTools")){
install.packages("caTools")
library(MASS)
}
setwd("C:\\Desarrollo\\repos\\Master-BigData-CIFF-2016\\analisis estadístico\\Practica1")
data=read.csv("house_train.csv",stringsAsFactors = FALSE)
str(data)
head(data)
summary(data)
data$date= as.Date(substr(data$date, 0, 8), "%Y%m%d")
data$date = as.factor(format(data$date,'%Y'))
data$zipcode = as.factor(data$zipcode)
data$yr_renovated = as.factor(data$yr_renovated)
data$yr_built = as.factor(data$yr_built)
data$condition = as.factor(data$condition)
data$floors = as.factor(data$floors)
data$bathrooms = as.factor(data$bathrooms)
data$bedrooms = as.factor(data$bedrooms)
data$view = as.factor(data$view)
data$waterfront = as.factor(data$waterfront)
unique(data$grade)
data$grade = as.factor(data$grade)
houses = subset(data, select=c("date","price","bedrooms","sqft_living","sqft_lot","floors","waterfront","view","condition","grade","sqft_above","sqft_basement","yr_built","yr_renovated","zipcode","sqft_living15","sqft_lot15"))
str(houses)
head(houses)
summary(houses)
library(MASS)
SAMPLE = sample.split(houses$price, SplitRatio = 0.5)
house_train = subset(houses, SAMPLE == TRUE)
house_test = subset(houses, SAMPLE == FALSE)
hist(house_train$price)
plot(house_train$price,house_train$sqft_living)
plot(house_train$price,house_train$sqft_lot)
modelo1=lm(price~sqft_living,data=house_train)
summary(modelo1)
plot(modelo1$residuals)
smoothScatter(modelo1$residuals)
hist(modelo1$residuals)
confint(modelo1,level=0.95)
qqnorm(modelo1$residuals); qqline(modelo1$residuals,col=2)
modelo2=lm(log(price)~sqft_living,data=house_train)
summary(modelo2)
plot(modelo2$residuals)
smoothScatter(modelo2$residuals)
hist(modelo2$residuals)
qqnorm(modelo2$residuals); qqline(modelo2$residuals,col=2)
confint(modelo2,level=0.95)
library(ggm)
library(igraph)
houses_cor <- house_train
houses_cor$date = as.numeric(houses_cor$date)
houses_cor$bedrooms = as.numeric(houses_cor$bedrooms)
houses_cor$floors = as.numeric(houses_cor$floors)
houses_cor$waterfront = as.numeric(houses_cor$waterfront)
houses_cor$view = as.numeric(houses_cor$view)
houses_cor$grade = as.numeric(houses_cor$grade)
houses_cor$condition = as.numeric(houses_cor$condition)
houses_cor$yr_built = as.numeric(houses_cor$yr_built)
houses_cor$yr_renovated = as.numeric(houses_cor$yr_renovated)
houses_cor$zipcode = as.numeric(houses_cor$zipcode)
cor(houses_cor)
modelo3=lm(log(price)~.,data=house_train)
summary(modelo3)
plot(modelo3$residuals)
smoothScatter(modelo3$residuals)
hist(modelo3$residuals)
qqnorm(modelo3$residuals); qqline(modelo3$residuals,col=2)
confint(modelo3,level=0.95)
modelo4=lm(log(price)~sqft_living+grade+sqft_above+sqft_living15+view+waterfront+zipcode,data=house_train)
summary(modelo4)
plot(modelo4$residuals)
smoothScatter(modelo4$residuals)
hist(modelo4$residuals)
qqnorm(modelo4$residuals); qqline(modelo4$residuals,col=2)
confint(modelo4,level=0.95)
modelo5=lm(log(price)~sqft_living+grade+sqft_above+sqft_living15+view+waterfront,data=house_train)
summary(modelo5)
plot(modelo5$residuals)
smoothScatter(modelo5$residuals)
hist(modelo5$residuals)
qqnorm(modelo5$residuals); qqline(modelo5$residuals,col=2)
confint(modelo5,level=0.95)
alphas=seq(from=0,to=0.5,by=0.01)
medias_recortadas=c()
medias_winsorizadas=c()
for (alpha in alphas){
medias_recortadas=c(medias_recortadas,mean(house_train$price, trim=alpha))
medias_winsorizadas=c(medias_winsorizadas,MediaWinsor(house_train$price,probs=c(alpha,1-alpha)))
}
Estimadores=data.frame(alphas)
Estimadores$media=mean(house_train$price)
Estimadores$mediana=median(house_train$price)
Estimadores$recortada=medias_recortadas
Estimadores$winsorizada=medias_winsorizadas
Estimadores
plot(Estimadores$recortada~Estimadores$alphas,ylim=c(min(Estimadores[,2:5]),max(Estimadores[,2:5])),col="red",type="l", main="representaciÃ³n de medias robustas", xlab="alfas",ylab="precio")
lines(alphas,Estimadores$winsorizada,col="blue")
lines(alphas,Estimadores$media,col="orange")
lines(alphas,Estimadores$mediana,col="green")
legend(x=mean(alphas),y=max(Estimadores[,2:5]),legend=c("media","mediana","media recortada","media winsorizada"),col=c("orange","green","red","blue"),pch=20)
summary(modelo6)
plot(modelo6$residuals)
smoothScatter(modelo6$residuals)
hist(modelo6$residuals)
qqnorm(modelo6$residuals); qqline(modelo6$residuals,col=2)
modelo6=rlm(log(price)~sqft_living+grade+sqft_above+sqft_living15+view+waterfront,data=house_train)
house_train$prediccionLM=predict(modelo5,type="response")
R2_Train_LM=1-sum((house_train$price-house_train$prediccionLM)^2)/sum((house_train$price-mean(house_train$price))^2)
confint(modelo6,level=0.95)
house_test$prediccionLM=predict(modelo5,newdata=house_test,type="response")
R2_Test_LM=1-sum((house_test$price-house_test$prediccionLM)^2)/sum((house_test$price-mean(house_test$price))^2)
R2_Train_LM
R2_Test_LM
house_train$prediccionRLM=predict(modelo6,type="response")
R2_Train_RLM=1-sum((house_train$price-house_train$prediccionRLM)^2)/sum((house_train$price-mean(house_train$price))^2)
house_test$prediccionRLM=predict(modelo6,newdata=house_test,type="response")
R2_Test_RLM=1-sum((house_test$price-house_test$prediccionRLM)^2)/sum((house_test$price-mean(house_test$price))^2)
R2_Train_RLM
R2_Test_RLM
SCE_LM=sum((house_test$price-house_test$prediccionLM)^2) #MSE
SCE_RLM=sum((house_test$price-house_test$prediccionRLM)^2) #MSE
SCE_LM
SCE_RLM
MAE_LM=sum(abs(house_test$price-house_test$prediccionLM))
MAE_RLM=sum(abs(house_test$price-house_test$prediccionRLM))
MAE_LM
MAE_RLM
test_data=read.csv("house_test.csv",stringsAsFactors = FALSE)
test_data$date= as.Date(substr(test_data$date, 0, 8), "%Y%m%d")
test_data$date = as.factor(format(test_data$date,'%Y'))
test_data$zipcode = as.factor(test_data$zipcode)
test_data$yr_renovated = as.factor(test_data$yr_renovated)
test_data$yr_built = as.factor(test_data$yr_built)
test_data$condition = as.factor(test_data$condition)
test_data$floors = as.factor(test_data$floors)
test_data$bathrooms = as.factor(test_data$bathrooms)
test_data$bedrooms = as.factor(test_data$bedrooms)
test_data$view = as.factor(test_data$view)
test_data$waterfront = as.factor(test_data$waterfront)
unique(test_data$grade)
test_data$grade = as.factor(test_data$grade)
test_houses = subset(test_data, select=c("date","price","bedrooms","sqft_living","sqft_lot","floors","waterfront","view","condition","grade","sqft_above","sqft_basement","yr_built","yr_renovated","zipcode","sqft_living15","sqft_lot15"))
test_houses$price=predict(modelo6,newdata=test_houses,type="response")
head(test_houses)
test_data$grade = as.factor(test_data$grade)
test_houses = subset(test_data, select=c("date","price","bedrooms","sqft_living","sqft_lot","floors","waterfront","view","condition","grade","sqft_above","sqft_basement","yr_built","yr_renovated","zipcode","sqft_living15","sqft_lot15"))
head(test_data)
test_houses = subset(test_data, select=c("date","bedrooms","sqft_living","sqft_lot","floors","waterfront","view","condition","grade","sqft_above","sqft_basement","yr_built","yr_renovated","zipcode","sqft_living15","sqft_lot15"))
test_houses$price=predict(modelo6,newdata=test_houses,type="response")
head(test_houses)
write.table(test_houses, file = "house_test_ptedictions.csv", sep = ",", col.names = NA)
