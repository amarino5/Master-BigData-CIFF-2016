x<-seq(-4,4,1)
y<-x^2
plot(x,y)
plot(x,y, type="l")
x<-seq(-4,4,0.1)
plot(x,y, type="l")
x<-seq(-4,4,0.11)
y<-x^2
#type para indicar el tipo de union
plot(x,y, type="l")
y<-dnorm(x)
plot(x,y, type="l")
fit <- lm(mpg ~ wt, data=mtcars)
plot(mtcars$wt, mtcars$mpg)
abline(fit)
type(fit)
fit
install.packages.("ggplot2")
install.packages("ggplot2")
library(ggplot2)
diamons
diamonds
sample(diamonds)
sample(diamonds,10)
?diamonds
?boxplot
plot(1,xaxis)
plot(diamonds$cut,diamonds$price,xlabel="cut",ylabel="price")
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
fit <- lm(price ~ carat, data=diamonds)
abline(fit)
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
fit <- lm(price ~ carat, data=diamonds)
abline(fit)
?abline
abline(fit,col=110)
abline(fit,col=100)
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
fit <- lm(price ~ carat, data=diamonds)
abline(fit,col=100)
abline(fit,col=001)
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
plot(diamonds$carat,diamonds$price,xlabel="cut",ylabel="price")
fit <- lm(price ~ carat, data=diamonds)
abline(fit,col=001)
abline(fit,col=001)
abline(fit,col=134)
abline(fit,col="red")
plot(diamonds$cut,diamonds$price,xlabel="cut",ylabel="price")
?ot
?plot
plot(diamonds$cut,diamonds$price,xlab="cut",ylab="price")
plot(diamonds$carat,diamonds$price,xlab="Price",ylabel="Carat")
fit <- lm(price ~ carat, data=diamonds)
abline(fit,col="red")
?plot
plot(xaxis,diamonds$price,xlab="Price",ylab="Carat")
xaxis<-seq(0,4,0.5)
plot(xaxis,diamonds$price,xlab="Price",ylab="Carat")
plot(diamonds$carat,diamonds$price,xlab="Price",ylab="Carat")
fit <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
abline(fit,col="red")
plot(diamonds["Carat"<3.5],diamonds$price,xlab="Price",ylab="Carat")
plot(diamonds["Carat"<3.5],diamonds$price,xlab="Price",ylab="Carat",type="point")
plot(diamonds["Carat"<3.5],diamonds$price,xlab="Price",ylab="Carat",type="point")
plot(diamonds$carat,diamonds$price,xlab="Price",ylab="Carat",type="point")
plot(diamonds$carat,diamonds$price,xlab="Price",ylab="Carat",type="p")
diamonds_ideal <- diamonds[diamonds$cut == "Ideal", ]
diamonds_ideal <- diamonds[diamonds$cut == "Ideal", ]
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",type="p")
fit <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
abline(fit,col="red")
fit2 <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
abline(fit2,col="red")
plot(diamonds_ideal$price,diamonds_ideal$carat,xlab="Price",ylab="Carat",type="p")
?plot
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",type="p")
fit2 <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
abline(fit2,col="red")
?line
?lines
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=20)
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=.)
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=.)
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=".")
?lines
line2(diamonds_ideal$carat,lm(price ~ carat + I(carat^2)),col="red")
lines(diamonds_ideal$carat,lm(price ~ carat + I(carat^2)),col="red")
diamonds_ideal$carat
lines(diamonds_ideal$carat,fit2,col="red")
lines(diamonds_ideal$price,fit2,col="red")
?lines
lines(fit2,col="red")
fit2
fit2$coefficients
fit2$coefficients[1]
fit2$coefficients[2]
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=".")
fit2 <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
lines(diamonds_ideal$price,fitted(fit2),col="red")
diamonds_ideal <- diamonds[diamonds$cut == "Ideal", ]
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=".")
fit2 <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
lines(diamonds_ideal$price,fitted(fit2),col="red")
lines(diamonds_ideal$carat,fitted(fit2),col="red")
lines(diamonds_ideal$price,fitted(fit2),col="red")
diamonds_ideal <- diamonds[diamonds$cut == "Ideal", ]
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Price",ylab="Carat",pch=".")
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Carat",ylab="Price",pch=".")
lines(diamonds_ideal$carat,fitted(fit2),col="red")
head(diamonds)
boxplot(price~cut,data=diamonds)
diamonds_ideal <- diamonds[diamonds$cut == "Ideal", ]
plot(diamonds_ideal$carat,diamonds_ideal$price,xlab="Carat",ylab="Price",pch=".")
#El + solo está añadiendo otra variable al modelo. La I es una transformacion de la variable (no recuerda el que)
fit <- lm(price ~ carat + I(carat^2), data=diamonds_ideal)
#con esto añado una nueva columna cuadratica
diamonds$carat_sqr <- (diamonds$carat)^2
#predict dado un modelo y dados los datos te da los valores de la curva para cada uno de desos datos
lines(diamonds_ideal$carat,predict(fit,data=diamonds_ideal),col="red")
lines(predict(fit,data=diamonds_ideal),col="red")
qplot(carat,price,date=diamonds,colours=clarity)
qplot(carat,price,data=diamonds,colours=clarity)
qplot(carat,price,data = diamonds ,colours=clarity)
qplot(carat,price,data = diamonds ,colour=clarity)
library(ggplot2)
setwd("/home/osboxes/app/Master-BigData-CIFF-2016/entornos-DS-R")
diabetesdf <- read.table('diabetes.data',header=TRUE,na.strings = '-9999.0',skip=0)
#diabetesdf[diabetesdf=='-9999.0'] <- NA
diabetesdfwork<-na.omit(diabetesdf)
which(is.na(diabetesdfwork))
#Ver el tipo de cada una de las variables.
str(diabetesdfwork)
summary(diabetesdfwork)
head(diabetesdfwork)
head(diabetesdf)
#boxplot(diabetesdfwork, use.cols = TRUE)
ggplot(stack(diabetesdfwork), aes(x = ind, y = values)) +
geom_boxplot()
str(diabetesdfwork)
summary(diabetesdfwork)
?TAPPLY
?tapply
tapply(diabetesdfwork,diabetesdfwork$SEX=='M,mean)
head(diabetesdfwork)
tapply(diabetesdfwork$AGE, diabetesdfwork$SEX=='M',mean)
head(diabetesdfwork)
tapply(diabetesdfwork$AGE, diabetesdfwork$SEX=='M',mean)
tapply(diabetesdfwork,diabetesdfwork$SEX=='M,mean)
tapply(diabetesdfwork[,1],diabetes$SEX, mean)
tapply(diabetesdfwork[,1],diabetes$SEX, mean)
head(diabetesdfwork)
head(diabetesdfwork)
cor(diabetesdfwork[-2],use="everything")
;
library(ggplot2)
